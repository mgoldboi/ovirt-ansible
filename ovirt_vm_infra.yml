---
- name: oVirt infra
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    engine_url: "{{ lookup('env','OVIRT_URL') }}"
    engine_user: "{{ lookup('env','OVIRT_USERNAME') }}"
    engine_password: "{{ lookup('env','OVIRT_PASSWORD') }}"
    
    deployment_cluster: Default
    deployment_storage_domain: NFS
    machine_template: rhel75_60G

    httpd_vm:
      cluster: "{{ deployment_cluster }}"
      domain: example.com
      template: "{{ machine_template }}"
      memory: 2GiB
      cores: 2
      ssh_key: ssh-rsa AAA...LGx user@fqdn
      root_password: 'redhat'

    db_vm:
      cluster: "{{ deployment_cluster }}"
      domain: example.com
      template: "{{ machine_template }}"
      memory: 4GiB
      cores: 1
      ssh_key: ssh-rsa AAA...LGx user@fqdn
      root_password: 'redhat'

    vms:
      - name: cf-postgresql-vm-0
        tag: postgresql_vm
        profile: "{{ db_vm }}"
      - name: cf-postgresql-vm-1
        tag: postgresql_vm
        profile: "{{ db_vm }}"
      - name: cf-apache-vm
        tag: httpd_vm
        profile: "{{ httpd_vm }}"

    affinity_groups:
      - name: db-ag
        cluster: "{{ deployment_cluster }}"
        vm_enforcing: true
        vm_rule: negative
        vms:
          - postgresql-vm-0
          - postgresql-vm-1

  roles:
    - ovirt-vm-infra
  

  tasks:
    - name: Obtain SSO token with using username/password credentials
      ovirt_auth:
        url: "{{ lookup('env','OVIRT_URL') }}"
        username: "{{ lookup('env','OVIRT_USERNAME') }}"
        password: "{{ lookup('env','OVIRT_PASSWORD') }}"
        insecure: true
   
    - name: Fetch VM IPs
      ovirt_vms_facts:
        auth: "{{ ovirt_auth }}"
        pattern: "name={{ item.name }}"
        fetch_nested: true
        nested_attributes: ips
      with_items: "{{ vms }}"
      register: vms_ips

    - debug:
        msg: "{{ vms_ips }}"

    - name: Create apache_vms groups
      add_host:
        groups: apache_vms
        hostname: "{{ item.ansible_facts.ovirt_vms | ovirtvmipv4 }}"
        ansible_host: "{{ item.ansible_facts.ovirt_vms | ovirtvmipv4 }}"
        ansible_user: root
        ansible_password: redhat
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      with_items: "{{ vms_ips.results }}"

- name: Setup apache
  hosts: apache_vms

  vars:
    apache_listen_port: 8080
    apache_vhosts:
      - servername: "example.com"
        documentroot: "/var/www/html"

  pre_tasks:
    - name: xyz
      package:
        name: libselinux-python
        state: present
    - name: Add repository
      yum_repository:
        name: epel
        description: EPEL YUM repo
        baseurl: http://download-node-02.eng.bos.redhat.com/released/RHEL-7/7.5/Server/x86_64/os/
        gpgcheck: false


  tasks:
    - name: File
      copy:
        dest: "/var/www/html/index.html"
        content: |
          Hello from "{{ inventory_hostname }}!"

  roles:
   - geerlingguy.apache
